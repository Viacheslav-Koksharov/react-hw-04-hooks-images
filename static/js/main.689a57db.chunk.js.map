{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","services/fetch.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/App.jsx","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","s","searchbar","e","preventDefault","trim","toast","error","toastify","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","name","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","fetchImg","page","url","axios","get","then","data","hits","Spinner","color","height","width","timeout","ImageGalleryItem","id","webformatURL","tags","imageGalleryItem","src","alt","imageGalleryItemImage","modalRoot","document","querySelector","Modal","children","onClose","useEffect","keyDown","code","window","addEventListener","removeEventListener","createPortal","overlay","onClick","target","modal","Button","button","ImageGallery","currentPage","setCurrentPage","images","setImages","status","setStatus","largeImageURL","setLargeImageURL","setTags","showModal","setShowModal","items","length","catch","errorMessage","message","scrollTo","top","documentElement","scrollHeight","behavior","imageGallery","nodeName","selectedImage","find","image","Number","map","App","position","autoClose","hideProgressBar","closeOnClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.689a57db.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2-GIi\",\"toastify\":\"ImageGallery_toastify__3yBzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__UhUfi\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__pNQRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__qLTGJ\",\"modal\":\"Modal_modal__2rhHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__E0Hv0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1vI-h\",\"searchForm\":\"Searchbar_searchForm__1NlKB\",\"searchFormButton\":\"Searchbar_searchFormButton__3Jrjc\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__2-NyG\",\"searchFormInput\":\"Searchbar_searchFormInput__3_BkO\",\"searchForm-input\":\"Searchbar_searchForm-input__3MWYp\",\"toastify\":\"Searchbar_toastify__3m6fw\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleChangeForm = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      toast.error('Try again!', { className: `${s.toastify}` });\n    }\n    onSubmit(searchQuery);\n    setSearchQuery('');\n  };\n\n  return (\n    <header className={s.searchbar}>\n      <form onSubmit={handleSubmit} className={s.searchForm}>\n        <button type=\"submit\" className={s.searchFormButton}>\n          <span className={s.searchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          className={s.searchFormInput}\n          type=\"text\"\n          name=\"searchQuery\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n          value={searchQuery}\n          onChange={handleChangeForm}\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '19246531-fc0b1c1353c7051ee5ebaba0f';\n\nfunction fetchImg(searchQuery, page) {\n  const url = `${BASE_URL}?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return axios.get(url).then(({ data }) => data.hits);\n}\n\nexport default fetchImg;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spinner = () => {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\n\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ id, webformatURL, tags }) => {\n  return (\n    <li className={s.imageGalleryItem}>\n      <img\n        id={id}\n        src={webformatURL}\n        alt={tags}\n        className={s.imageGalleryItemImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport default function Modal({ children, onClose }) {\n  useEffect(() => {\n    const keyDown = e => {\n      if (e.code === 'Escape') {\n        onClose();\n      }\n    };\n\n    window.addEventListener('keydown', keyDown);\n\n    return () => {\n      window.removeEventListener('keydown', keyDown);\n    };\n  }, [onClose]);\n\n  const backdropClick = e => {\n    if (e.target === e.currentTarget) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.overlay} onClick={backdropClick}>\n      <div className={s.modal}>{children}</div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  children: PropTypes.any.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nexport default function Button({ onClick, page }) {\n  const loading = () => {\n    onClick(page);\n  };\n\n  return (\n    <button className={s.button} type=\"button\" onClick={loading}>\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport fetchImg from '../../services/fetch';\nimport { toast } from 'react-toastify';\nimport Spinner from '../Loader/Loader';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\n\nexport default function ImageGallery({ searchQuery, page }) {\n  const [currentPage, setCurrentPage] = useState(page);\n  const [images, setImages] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [largeImageURL, setLargeImageURL] = useState(null);\n  const [tags, setTags] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  useEffect(() => {\n    setStatus('pending');\n\n    if (searchQuery.trim() !== '') {\n      fetchImg(searchQuery, page)\n        .then(items => {\n          if (items.length === 0) {\n            setStatus('rejected');\n            toast.error('Идите в жопу с таким запросом', {\n              className: `${s.toastify}`,\n            });\n            return;\n          }\n          setImages(items);\n          setCurrentPage(page + 1);\n          setStatus('resolved');\n        })\n        .catch(errorMessage);\n    } else {\n      setStatus('idle');\n    }\n  }, [searchQuery, page]);\n\n  const onClick = () => {\n    fetchImg(searchQuery, currentPage)\n      .then(items => {\n        setImages([...images, ...items]);\n        setCurrentPage(currentPage + 1);\n        setStatus('resolved');\n        scrollTo();\n      })\n      .catch(errorMessage);\n  };\n\n  const errorMessage = error => {\n    setStatus('rejected');\n    toast.error(error.message);\n  };\n\n  const scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  const selectedImage = e => {\n    if (e.target.nodeName === 'IMG') {\n      const selectedImage = images.find(\n        image => image.id === Number(e.target.id),\n      );\n      setShowModal(!showModal);\n      setLargeImageURL(selectedImage.largeImageURL);\n      setTags(selectedImage.tags);\n    }\n  };\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n    setLargeImageURL(null);\n    setTags(null);\n  };\n\n  if (status === 'idle' || status === 'rejected') return null;\n  if (status === 'pending') return <Spinner />;\n  if (status === 'resolved' && images.length > 0) {\n    return (\n      <>\n        <ul className={s.imageGallery} onClick={selectedImage}>\n          {images.map(({ id, webformatURL, tags }) => (\n            <ImageGalleryItem\n              key={id}\n              id={id}\n              webformatURL={webformatURL}\n              tags={tags}\n            />\n          ))}\n        </ul>\n        {<Button page={page} onClick={onClick} />}\n        {showModal && (\n          <Modal onClose={toggleModal}>\n            <img src={largeImageURL} alt={tags} />\n          </Modal>\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  page: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n  const page = 1;\n\n  return (\n    <>\n      <Searchbar onSubmit={setSearchQuery} />\n      <ImageGallery searchQuery={searchQuery} page={page} />\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={2000}\n        hideProgressBar={false}\n        closeOnClick=\"true\"\n      />\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}