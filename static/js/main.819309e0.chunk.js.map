{"version":3,"sources":["components/ImageGallery/ImageGallery.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.js","services/fetch.js","components/Loader/Loader.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","components/App.jsx","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","state","searchQuery","handleChangeForm","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","className","s","toastify","props","onSubmit","searchbar","this","searchForm","type","searchFormButton","searchFormButtonLabel","searchFormInput","name","autoComplete","autoFocus","placeholder","onChange","Component","fetchImg","page","url","axios","get","then","data","hits","Spinner","color","height","width","timeout","ImageGalleryItem","id","webformatURL","tags","imageGalleryItem","src","alt","imageGalleryItemImage","modalRoot","document","querySelector","Modal","keyDown","code","onClose","backdropClick","target","window","addEventListener","removeEventListener","createPortal","overlay","onClick","modal","children","Button","loading","button","ImageGallery","images","status","largeImageURL","showModal","prevState","scrollTo","catch","errorMessage","message","top","documentElement","scrollHeight","behavior","selectedImage","nodeName","find","image","Number","toggleModal","prevProps","length","imageGallery","map","App","handleFormSubmit","position","autoClose","hideProgressBar","closeOnClick","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.819309e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGallery\":\"ImageGallery_imageGallery__2-GIi\",\"toastify\":\"ImageGallery_toastify__3yBzn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imageGalleryItem\":\"ImageGalleryItem_imageGalleryItem__UhUfi\",\"imageGalleryItemImage\":\"ImageGalleryItem_imageGalleryItemImage__pNQRr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__qLTGJ\",\"modal\":\"Modal_modal__2rhHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__E0Hv0\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './Searchbar.module.css';\n\nexport default class Searchbar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleChangeForm = e => {\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      toast.error('Try again!', { className: `${s.toastify}` });\n    }\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n\n  render() {\n    return (\n      <header className={s.searchbar}>\n        <form onSubmit={this.handleSubmit} className={s.searchForm}>\n          <button type=\"submit\" className={s.searchFormButton}>\n            <span className={s.searchFormButtonLabel}>Search</span>\n          </button>\n\n          <input\n            className={s.searchFormInput}\n            type=\"text\"\n            name=\"searchQuery\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.searchQuery}\n            onChange={this.handleChangeForm}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import axios from 'axios';\n\nconst BASE_URL = 'https://pixabay.com/api/';\nconst KEY = '19246531-fc0b1c1353c7051ee5ebaba0f';\n\nfunction fetchImg(searchQuery, page) {\n  const url = `${BASE_URL}?q=${searchQuery}&page=${page}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  return axios.get(url).then(({ data }) => data.hits);\n}\n\nexport default fetchImg;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst Spinner = () => {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000} //3 secs\n    />\n  );\n};\nexport default Spinner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGalleryItem.module.css';\n\nconst ImageGalleryItem = ({ id, webformatURL, tags }) => {\n  return (\n    <li className={s.imageGalleryItem}>\n      <img\n        id={id}\n        src={webformatURL}\n        alt={tags}\n        className={s.imageGalleryItemImage}\n      />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Modal.module.css';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.keyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.keyDown);\n  }\n\n  keyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  backdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    return createPortal(\n      <div className={s.overlay} onClick={this.backdropClick}>\n        <div className={s.modal}>{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nModal.propTypes = {\n  children: PropTypes.any.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\nexport default Modal;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Button.module.css';\n\nclass Button extends Component {\n  loading = () => {\n    const { onClick, page } = this.props;\n    onClick(page);\n  };\n\n  render() {\n    return (\n      <button className={s.button} type=\"button\" onClick={this.loading}>\n        Load more\n      </button>\n    );\n  }\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ImageGallery.module.css';\nimport fetchImg from '../../services/fetch';\nimport { toast } from 'react-toastify';\nimport Spinner from '../Loader/Loader';\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\nimport Modal from '../Modal/Modal';\nimport Button from '../Button/Button';\n\nexport default class ImageGallery extends Component {\n  state = {\n    page: this.props.page,\n    images: [],\n    error: null,\n    status: 'idle',\n    largeImageURL: null,\n    tags: null,\n    showModal: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery, page } = this.props;\n\n    if (prevProps.searchQuery !== searchQuery) {\n      this.setState({ status: 'pending' });\n\n      if (searchQuery.trim() !== '') {\n        fetchImg(searchQuery, page)\n          .then(images => {\n            if (images.length === 0) {\n              this.setState({ status: 'rejected' });\n              toast.error('Идите в жопу с таким запросом', {\n                className: `${s.toastify}`,\n              });\n              return;\n            }\n            this.setState(prevState => ({\n              images: [...images],\n              page: page + 1,\n              status: 'resolved',\n            }));\n          })\n          .catch(this.errorMessage);\n      } else {\n        this.setState({ status: 'idle' });\n      }\n    }\n  }\n\n  onClick = () => {\n    const { page } = this.state;\n    const { searchQuery } = this.props;\n\n    fetchImg(searchQuery, page)\n      .then(images => {\n        this.setState(prevState => ({\n          images: [...prevState.images, ...images],\n          page: page + 1,\n          status: 'resolved',\n        }));\n        this.scrollTo();\n      })\n      .catch(this.errorMessage);\n  };\n  errorMessage = error => {\n    this.setState({ error: error.message, status: 'rejected' });\n    toast.error(this.state.error);\n  };\n  scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: 'smooth',\n    });\n  };\n\n  selectedImage = e => {\n    if (e.target.nodeName === 'IMG') {\n      const selectedImage = this.state.images.find(\n        image => image.id === Number(e.target.id),\n      );\n      this.setState(({ showModal }) => ({\n        showModal: !showModal,\n        largeImageURL: selectedImage.largeImageURL,\n        tags: selectedImage.tags,\n      }));\n    }\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({\n      showModal: !showModal,\n      largeImageURL: null,\n      tags: null,\n    }));\n  };\n\n  render() {\n    const { page, images, showModal, largeImageURL, tags, status } = this.state;\n\n    if (status === 'idle' || status === 'rejected') return null;\n    if (status === 'pending') return <Spinner />;\n    if (status === 'resolved' && images.length > 0) {\n      return (\n        <>\n          <ul className={s.imageGallery} onClick={this.selectedImage}>\n            {images.map(({ id, webformatURL, tags }) => (\n              <ImageGalleryItem\n                key={id}\n                id={id}\n                webformatURL={webformatURL}\n                tags={tags}\n              />\n            ))}\n          </ul>\n          {<Button page={page} onClick={this.onClick} />}\n          {showModal && (\n            <Modal onClose={this.toggleModal}>\n              <img src={largeImageURL} alt={tags} />\n            </Modal>\n          )}\n        </>\n      );\n    }\n  }\n}\n\nImageGallery.propTypes = {\n  page: PropTypes.number.isRequired,\n  searchQuery: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Searchbar from './Searchbar/Searchbar';\nimport ImageGallery from './ImageGallery/ImageGallery';\n\nexport default class App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery });\n  };\n\n  render() {\n    const { searchQuery, page } = this.state;\n\n    return (\n      <>\n        <Searchbar onSubmit={this.handleFormSubmit} />\n        <ImageGallery searchQuery={searchQuery} page={page} />\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={2000}\n          hideProgressBar={false}\n          closeOnClick=\"true\"\n        />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"Searchbar_searchbar__1vI-h\",\"searchForm\":\"Searchbar_searchForm__1NlKB\",\"searchFormButton\":\"Searchbar_searchFormButton__3Jrjc\",\"searchFormButtonLabel\":\"Searchbar_searchFormButtonLabel__2-NyG\",\"searchFormInput\":\"Searchbar_searchFormInput__3_BkO\",\"searchForm-input\":\"Searchbar_searchForm-input__3MWYp\",\"toastify\":\"Searchbar_toastify__3m6fw\"};"],"sourceRoot":""}